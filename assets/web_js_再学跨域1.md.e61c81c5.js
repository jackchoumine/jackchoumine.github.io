import{_ as s,o as n,c as a,a as l}from"./app.367771f0.js";const A=JSON.parse('{"title":"再学跨域（二）-- CORS - 跨域资源共享","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. AJAX 跨域请求发生了什么？","slug":"_1-ajax-跨域请求发生了什么","link":"#_1-ajax-跨域请求发生了什么","children":[{"level":3,"title":"先认识几个新的请求头信息","slug":"先认识几个新的请求头信息","link":"#先认识几个新的请求头信息","children":[]},{"level":3,"title":"origin vs referer","slug":"origin-vs-referer","link":"#origin-vs-referer","children":[]},{"level":3,"title":"cors 和 cross-site 有什么不同","slug":"cors-和-cross-site-有什么不同","link":"#cors-和-cross-site-有什么不同","children":[]},{"level":3,"title":"使用 AJAX 发送相同的请求","slug":"使用-ajax-发送相同的请求","link":"#使用-ajax-发送相同的请求","children":[]}]},{"level":2,"title":"2. CORS 跨域解决方案","slug":"_2-cors-跨域解决方案","link":"#_2-cors-跨域解决方案","children":[{"level":3,"title":"2.1 简单请求","slug":"_2-1-简单请求","link":"#_2-1-简单请求","children":[]},{"level":3,"title":"2.2 非简单请求","slug":"_2-2-非简单请求","link":"#_2-2-非简单请求","children":[]},{"level":3,"title":"2.3 预检请求","slug":"_2-3-预检请求","link":"#_2-3-预检请求","children":[]},{"level":3,"title":"2.4 为何有预检请求？","slug":"_2-4-为何有预检请求","link":"#_2-4-为何有预检请求","children":[]},{"level":3,"title":"2.5 如何携带认证信息？","slug":"_2-5-如何携带认证信息","link":"#_2-5-如何携带认证信息","children":[]},{"level":3,"title":"2.6 预检请求的缓存","slug":"_2-6-预检请求的缓存","link":"#_2-6-预检请求的缓存","children":[]},{"level":3,"title":"2.7 如何获取响应的头信息？","slug":"_2-7-如何获取响应的头信息","link":"#_2-7-如何获取响应的头信息","children":[]},{"level":3,"title":"2.8 如何处理多个域名跨域？","slug":"_2-8-如何处理多个域名跨域","link":"#_2-8-如何处理多个域名跨域","children":[]}]},{"level":2,"title":"浏览器如何检查跨域是否合法的？","slug":"浏览器如何检查跨域是否合法的","link":"#浏览器如何检查跨域是否合法的","children":[]},{"level":2,"title":"如何检验对 CORS 的理解？","slug":"如何检验对-cors-的理解","link":"#如何检验对-cors-的理解","children":[{"level":3,"title":"两个调试技巧","slug":"两个调试技巧","link":"#两个调试技巧","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"relativePath":"web/js/再学跨域1.md"}'),p={name:"web/js/再学跨域1.md"},o=l(`<h1 id="再学跨域-二-cors-跨域资源共享" tabindex="-1">再学跨域（二）-- CORS - 跨域资源共享 <a class="header-anchor" href="#再学跨域-二-cors-跨域资源共享" aria-hidden="true">#</a></h1><blockquote><p>关于博主：前端程序员，最近专注于 webGis 开发。加微信：MasonChou123，进技术交流群。</p></blockquote><p>本文是再学跨域系列的第二篇，主要介绍 CORS 跨域解决方案。</p><p>浏览器的同源策略限制了不同源或者不同网站之间的交互，但是在实际开发中，需要需要请求不同源的数据，比如前端应用需在网站 A 中通过 AJAX 请求网站 B 的数据，比如地图应用从 C 网站加载图片写入到 A 网站的 canvas 中，同源策略就阻碍了这种系统集成方式。</p><p>CORS（Cross-Origin Resource Sharing）是 W3C 标准，是跨域资源共享的缩写，是一种跨域解决方案，或者说不同域的系统集成方案。</p><h2 id="_1-ajax-跨域请求发生了什么" tabindex="-1">1. AJAX 跨域请求发生了什么？ <a class="header-anchor" href="#_1-ajax-跨域请求发生了什么" aria-hidden="true">#</a></h2><p>在介绍同源限制的文章中，使用表单提交的数据是可跨域的:</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">action</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:5566/form-post</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">method</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">accept-charset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">target</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">targetIfr</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">提交</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">action</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:5566/form-get</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">method</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">get</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">target</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">targetIfr</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">提交</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>post 请求的关键信息：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">POST</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/form-post</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HTTP/1.1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># method path 协议</span></span>
<span class="line"><span style="color:#FFCB6B;">Host:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">localhost:5566</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 目的主机和端口</span></span>
<span class="line"><span style="color:#FFCB6B;">Origin:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:3000</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 请求的源</span></span>
<span class="line"><span style="color:#FFCB6B;">Referer:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:3000/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 请求的来源</span></span>
<span class="line"><span style="color:#FFCB6B;">Sec-Fetch-Dest:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">iframe</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 请求的目标</span></span>
<span class="line"><span style="color:#FFCB6B;">Sec-Fetch-Mode:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">navigate</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 请求的模式</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="先认识几个新的请求头信息" tabindex="-1">先认识几个新的请求头信息 <a class="header-anchor" href="#先认识几个新的请求头信息" aria-hidden="true">#</a></h3><p><code>Sec-Fetch-Dest</code> 告诉服务器请求的资源类型，以便让服务做出个更精确的响应。</p><p>它的值有:</p><ul><li>audio 音频数据</li><li>document 文档</li><li>empty 空 fetch、XMLHttpRequest、WebSocket、EventSource 等发起请求</li><li>font 字体 <code>@font-face</code> 发起。</li><li>frame iframe 发起。</li><li>iframe iframe 发起。</li><li>image 图片 <code>&lt;image&gt;</code>、SVG、CSS background-image、CSS cursor、CSS list-style-image 等。</li><li>manifest link rel=&quot;manifest&quot; 发起。</li><li>script 脚本 <code>&lt;script src&gt;</code>发起。</li><li>style 样式 <code>&lt;link rel=&quot;stylesheet&gt;</code> 或者 <code>@import</code> 发起。</li><li>video 视频数据 <code>&lt;video&gt;</code> 发起。</li></ul><p><code>Sec-Fetch-Mode</code> ，表示请求模式，它的值有：</p><table><thead><tr><th>值</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td>cors</td><td>跨域请求</td><td>服务器端需要设置响应头 <code>Access-Control-Allow-Origin</code></td></tr><tr><td>same-origin</td><td>同源请求</td><td></td></tr><tr><td>navigate</td><td>导航请求</td><td>比如点击链接、重定向、form 提交等，服务返回的是一个新的页面</td></tr><tr><td>no-cors</td><td>跨域请求，无需设置跨域响应头</td><td>但是不需要服务器端设置响应头 <code>Access-Control-Allow-Origin</code> ，默认是 no-cors</td></tr><tr><td>websocket</td><td>websocket 请求</td><td></td></tr></tbody></table><blockquote><p>no-cors 表示跨域了，不需要服务器设置跨域响应头。什么情况下会是这种模式呢？ <code>图片</code> 、 <code>脚本</code> 和 <code>样式表</code> 等允许跨域且不用设置跨域响应头的资源。</p></blockquote><blockquote><p>Sec-Fetch-Mode 和 fetch 的 mode 属性意义和值都是一样的。</p></blockquote><p><code>Sec-Fetch-Site</code> 表示请求的站点类型，它的值有：</p><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>cross-site</td><td>跨站点请求</td></tr><tr><td>same-origin</td><td>同源请求</td></tr><tr><td>same-site</td><td>同站点请求</td></tr><tr><td>none</td><td>用户触发页面导航</td></tr></tbody></table><blockquote><p>same-site: 同站点请求，是否是同站点，判断规则复杂。</p></blockquote><p><a href="https://www.cnblogs.com/fulu/p/13879080.html" target="_blank" rel="noreferrer">同站判断规则 -- Sec-Fetch-*请求头，了解下? </a></p><p><code>Sec-Fetch-User</code> 表示请求的用户类型，它的值有：</p><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>?1</td><td>导航请求由用户激活触发，鼠标点击、按键</td></tr><tr><td>?0</td><td>导航请求由用户激活触发以外的情况触发</td></tr></tbody></table><blockquote><p>请求头只会在导航请求情况下携带，导航请求包括 document , embed , frame , iframe , or object。</p></blockquote><p>只要包含前缀 Sec- 都属于应用程序禁止修改的 HTTP 消息头，用户代理保留全部对它们的控制权，它们是请求元信息，服务器能根据这些信息做出更精确的响应，比如选择更加适合的资源，或者拒绝请求，提高安全性。</p><h3 id="origin-vs-referer" tabindex="-1">origin vs referer <a class="header-anchor" href="#origin-vs-referer" aria-hidden="true">#</a></h3><p>Referer 和 Origin 都是 HTTP 请求头，用于向服务器提供关于请求来源的信息，但它们之间存在一些重要的区别：</p><blockquote><p>Referer</p></blockquote><ul><li>作用： 指示当前请求是从哪个页面链接过来的。</li><li>包含信息： 包括协议、域名、路径、查询参数等，但不包括锚点（#）和用户信息（如用户名: 密码）。</li><li>发送时机： 几乎所有请求都会发送 Referer 头，除非浏览器无法获取到请求源。</li><li>用途： <ul><li>日志分析： 帮助网站管理员分析用户行为，了解用户是如何访问到当前页面的。</li><li>防盗链： 网站可以通过检查 Referer 头来判断图片、视频等资源是否被非法引用。</li><li>搜索引擎优化： 搜索引擎可以通过 Referer 头来判断页面之间的链接关系，从而更好地理解网页内容。</li></ul></li></ul><blockquote><p>Origin</p></blockquote><ul><li>作用： 指示请求的来源站点。</li><li>包含信息： 只包含协议、域名和端口号。</li><li>发送时机： 只有在跨域请求或者同源下 GET、HEAD 以外的请求方法时才会发送 Origin 头。</li><li>用途： <ul><li>跨域资源共享（CORS）： 服务器通过检查 Origin 头来判断是否允许跨域请求。</li><li>安全： 帮助服务器防止跨站请求伪造（CSRF）攻击。</li></ul></li></ul><p>Origin 的值可以是 null，请求来源是隐私的:</p><ul><li>跨源的图像或媒体，包括：img、video 和 audio 元素。</li><li>请求来源的协议不是 http、https、ftp、ws、wss 或 gopher 中的任意一个（如：blob、file 和 data）。</li></ul><h3 id="cors-和-cross-site-有什么不同" tabindex="-1">cors 和 cross-site 有什么不同 <a class="header-anchor" href="#cors-和-cross-site-有什么不同" aria-hidden="true">#</a></h3><blockquote><p>CORS（Cross-Origin Resource Sharing）</p></blockquote><ul><li>跨域资源共享： 是一种机制，它使用额外的 HTTP 头来允许浏览器发起跨域 HTTP 请求。</li><li>作用： 主要是为了解决浏览器同源策略的限制，允许前端 JavaScript 代码向不同域名下的服务器发起请求。</li><li>实现方式： 通过在服务器端设置相应的 HTTP 响应头来实现。浏览器在发起跨域请求时，会检查服务器返回的响应头，如果符合 CORS 规范，则允许请求。</li></ul><blockquote><p>cross-site</p></blockquote><ul><li><p>更广义的概念： 包括了 CORS，还包括其他类型的跨站行为，比如跨站脚本攻击（XSS）、跨站请求伪造（CSRF）等。</p></li><li><p>含义： 指的是在不同的网站或域之间进行的操作。</p></li><li><p>分类：</p><ul><li>跨站脚本攻击（XSS）： 攻击者通过注入恶意脚本到网页，从而在用户的浏览器上执行这些脚本。</li><li>跨站请求伪造（CSRF）： 攻击者诱导已登录的用户点击一个恶意的链接，从而在不知情的情况下以用户的名义发送请求，执行一些非法的操作。</li></ul></li><li><p>CORS 是一个技术术语，指的是一种机制，用于解决浏览器同源策略的限制。</p></li><li><p>cross-site 是一个更广义的概念，指的是在不同的网站或域之间进行的操作，它包含了 CORS 以及其他类型的跨站攻击。</p></li></ul><h3 id="使用-ajax-发送相同的请求" tabindex="-1">使用 AJAX 发送相同的请求 <a class="header-anchor" href="#使用-ajax-发送相同的请求" aria-hidden="true">#</a></h3><p>使用 fetch 发送相同的请求：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Author: ZhouQiJun</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Description: 关于博主，前端程序员，最近专注于 webGis 开发</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @加微信: MasonChou123，进技术交流群</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sendSameHttp</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">url</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:5566/form-post</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      method</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      headers</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/x-www-form-urlencoded</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">      body</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">age=123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">res</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">err</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>报错了：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Access</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">at</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:5566/form-post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">has</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">been</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">blocked</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">by</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">CORS</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">policy:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">No</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Origin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">present</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">requested</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resource.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">If</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">an</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">opaque</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">serves</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">your</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">needs,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">request</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s mode to </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">no-cors</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> to fetch the resource with CORS disabled.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>报错信息大概的意思是： 请求 <code>http://localhost:5566/form-post</code> 被 <code>http://localhost:3000</code> 的 CORS 策略拦截了，因为请求头中没有 <code>Access-Control-Allow-Origin</code> 响应头，如果你需要一个不透明的响应，可以设置请求模式为 <code>no-cors</code> 。</p><p>按照提示设置请求模式为 <code>no-cors</code>：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Author: ZhouQiJun</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Description: 关于博主，前端程序员，最近专注于 webGis 开发</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @加微信: MasonChou123，进技术交流群</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sendSameHttp</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">url</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:5566/form-post</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      method</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      headers</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/x-www-form-urlencoded</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">      body</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">age=123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      mode</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">no-cors</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">res</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">err</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>不报错了，但是拿不到返回数据：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">body</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">ok</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">status</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">statusText</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">opaque</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p><code>no-cors</code> 没有实现跨域请求的目标，它表示开发明确知道请求跨域了，但是我不需要拿到请求资源。这个只极少使用。</p></blockquote><p>服务器给出的数据去哪儿了？ 被浏览器拦截了。</p><h2 id="_2-cors-跨域解决方案" tabindex="-1">2. CORS 跨域解决方案 <a class="header-anchor" href="#_2-cors-跨域解决方案" aria-hidden="true">#</a></h2><blockquote><p>实现跨域的关键在于服务器，需要服务器配置请求头，告知浏览器是否允许客户端读取 http 返回值。它建立在 http 标准之上。</p></blockquote><p>现在开启服务器支持跨域：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">next</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Origin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 第二个参数可以换成你的域名</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">next</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>Access-Control-Allow-Origin</code> 的值是允许跨域的域名，只能是一个值或者 <code>*</code> ，表示允许所有域名访问。</p><p>不能使用逗号分隔的多个值，否则报错：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">The</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Origin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">contains</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">multiple</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">values</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3000,http://localhost:3001</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">but</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">only</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">one</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">allowed.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>希望跨域发送 <code>json</code> 数据，把请求改成：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Author: ZhouQiJun</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Description: 关于博主，前端程序员，最近专注于 webGis 开发</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @加微信: MasonChou123，进技术交流群</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sendSameHttp</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">url</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:5566/form-post</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      method</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      headers</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">      body</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">zqj</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        age</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">res</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">err</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>浏览器多了一个 <code>OPTIONS</code> 请求，且报错了：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Access</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">at</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:5566/form-post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">has</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">been</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">blocked</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">by</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">CORS</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">policy:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Request</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">field</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">content-type</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">allowed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">by</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Access-Control-Allow-Headers</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">preflight</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">response.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>大概意思是请求头字段 <code>content-type</code> 在预检请求头不被允许。</p><p>在介绍预检请求之前，先说下跨域请求的分类： 简单请求和非简单请求。</p><h3 id="_2-1-简单请求" tabindex="-1">2.1 简单请求 <a class="header-anchor" href="#_2-1-简单请求" aria-hidden="true">#</a></h3><p>简单请求：能通过 form 表单发起的请求，这种跨域请求不需要预先发送一个 OPTIONS 请求去询问服务器是否有权限。</p><p>具体来说，简单请求需要满足三个条件：</p><ul><li>请求方法：GET 、POST、HEAD</li><li>请求头只能包含四个：content-type、accept、accept-language</li><li>content-type 只能有三个：application/x-www-form-urlencoded，multipart/form-data 或 text/plain。</li></ul><h3 id="_2-2-非简单请求" tabindex="-1">2.2 非简单请求 <a class="header-anchor" href="#_2-2-非简单请求" aria-hidden="true">#</a></h3><p>不是简单请求，就是非简单请求，常见的简单请求：</p><ul><li>发送 json: content-type 为 <code>application/json</code></li><li>PUT、DELETE 等复杂方法。</li></ul><p>实践中抓住这两点就能迅速判断，因为项目中通常是 json 进行前后端交互。</p><h3 id="_2-3-预检请求" tabindex="-1">2.3 预检请求 <a class="header-anchor" href="#_2-3-预检请求" aria-hidden="true">#</a></h3><p>非简单请求跨域时，才需要先发起预检请求。</p><h3 id="_2-4-为何有预检请求" tabindex="-1">2.4 为何有预检请求？ <a class="header-anchor" href="#_2-4-为何有预检请求" aria-hidden="true">#</a></h3><p>两个原因：</p><ul><li><p>兼容性：互联发展初期，人们并没有预料到后来需要 js、XMLHttpRequest 和跨域，都是使用和服务器交互都是使用 form 表单，form 发起的请求都是简单请求。制定 CORS 后，需要保证老的网站不会因为新标准而无法工作。</p></li><li><p>安全性：这是 CORS 标准的关键，就是预检请求询问服务器是否允许复杂请求跨域的。如果没有复杂请求，完全可使用 form 实现跨域。</p></li></ul><p>服务器设置允许跨域的请求头：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">next</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Origin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 第二个参数可以换成你的域名</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Headers</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">next</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>现在发送 json，不报错了。</p><p><code>Access-Control-Allow-Headers</code> 告知浏览器，允许跨域的请求头。跨域请求包含复杂的 content-type 类型或者自定义请求头，就要配置这个响应头。</p><p>希望在接口中添加自定义请求头 <code>api-version</code> 以表明接口版本：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">content-type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">api-version</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.2.0</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>再次发起请求，报错：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Request</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">field</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">api-version</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">allowed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">by</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Access-Control-Allow-Headers</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">preflight</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">response.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>大致意思是请求字段 <code>apo-version</code> 预检请求的 <code>Access-Control-Allow-Headers</code> 中。</p><p>现在加上：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">next</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Origin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 第二个参数可以换成你的域名</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Headers</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">content-type,Api-version</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">next</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>跨域成功了。</p><p><code>Access-Control-Allow-Methods</code> ，开启允许跨域的方法，默认是 <code>GET</code> 、 <code>POST</code> 和 <code>HEAD</code> , 和 form 表单能使用的方法兼容。</p><blockquote><p>Access-Control-Allow-Headers 可设置为 <code>*</code> ，表示不允许携带自定义请求头。</p></blockquote><h3 id="_2-5-如何携带认证信息" tabindex="-1">2.5 如何携带认证信息？ <a class="header-anchor" href="#_2-5-如何携带认证信息" aria-hidden="true">#</a></h3><p>想要跨域请求中，发送认证信息，比如 cookie ，如何办？</p><p>fetch 携带 cookie，设置 <code>credentials</code> 为 <code>include</code> 。</p><p>fetch credentials 值有三个：</p><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>same-origin</td><td>同源才发</td></tr><tr><td>omit</td><td>不发</td></tr><tr><td>include</td><td>跨域也发</td></tr></tbody></table><blockquote><p>认证信息有哪些：cookie 、HTTP Basic authentication。</p></blockquote><p>携带了认证信息，报错了：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">preflight</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">request</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">doesn</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">t pass access control check: The value of the </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Credentials</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> header in the response is </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#C3E88D;"> which must be </span><span style="color:#89DDFF;">&#39;true&#39;</span><span style="color:#C3E88D;"> when the request</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">credentials</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mode</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">include</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>需要再服务端设置 <code>Access-Control-Allow-Credentials</code> 为 true，允许请求携带 cookie。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Credentials</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>如果希望通过 <code>http basic authentication</code> 发送认证信息，需要在请求头中添加 <code>Authorization</code> 字段。</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Headers</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">content-type,Api-version,Authorization</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>需要携带 cookie，服务端设置 <code>Access-Control-Allow-Origin</code> 不能为 <code>*</code> ，必须是具体的域名。</p></blockquote><h3 id="_2-6-预检请求的缓存" tabindex="-1">2.6 预检请求的缓存 <a class="header-anchor" href="#_2-6-预检请求的缓存" aria-hidden="true">#</a></h3><p>预检请求是有缓存的，浏览器会缓存预检请求的结果，下次再发起相同的请求时，就不会再发起预检请求了。</p><p>预检请求的缓存时间是多久呢？ 规范是 5 秒，可以通过设置 <code>Access-Control-Max-Age</code> 来设置缓存时间。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Max-Age</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 6 小时</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-7-如何获取响应的头信息" tabindex="-1">2.7 如何获取响应的头信息？ <a class="header-anchor" href="#_2-7-如何获取响应的头信息" aria-hidden="true">#</a></h3><p>服务器需要设置允许前端获取的响应头：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Expose-Headers</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>默认允许获取的响应头是： content-type、content-length。</p><h3 id="_2-8-如何处理多个域名跨域" tabindex="-1">2.8 如何处理多个域名跨域？ <a class="header-anchor" href="#_2-8-如何处理多个域名跨域" aria-hidden="true">#</a></h3><p>access-control-allow-origin 只能设置一个值，如果需要多个域名跨域，可以通过判断请求头中的 origin 来设置。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Author: ZhouQiJun</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Description: 关于博主，前端程序员，最近专注于 webGis 开发</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @加微信: MasonChou123，进技术交流群</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> whiteList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3001</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">next</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">origin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">headers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">origin</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">whiteList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">origin</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Origin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">origin</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">next</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>到了这里，CORS 跨域解决方案就介绍完了。</p><h2 id="浏览器如何检查跨域是否合法的" tabindex="-1">浏览器如何检查跨域是否合法的？ <a class="header-anchor" href="#浏览器如何检查跨域是否合法的" aria-hidden="true">#</a></h2><p>使用伪代码来描述：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ACAO 是 Access-Control-Allow-Origin</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ACAC 是 Access-Control-Allow-Credentials</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// credentials mode 是 CM</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (ACAO </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (ACAO </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> CM </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">include</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">origin </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> ACAO) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (CM </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">include</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (ACAC </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="如何检验对-cors-的理解" tabindex="-1">如何检验对 CORS 的理解？ <a class="header-anchor" href="#如何检验对-cors-的理解" aria-hidden="true">#</a></h2><ul><li>简单请求和非简单请求的区别 ✅</li><li>根据服务器返回的响应头判断是否允许跨域、是否可以携带 cookie 和前端能保持哪些请求头 ✅</li><li>从跨域错误中分析出问题 ✅</li></ul><h3 id="两个调试技巧" tabindex="-1">两个调试技巧 <a class="header-anchor" href="#两个调试技巧" aria-hidden="true">#</a></h3><ul><li>不需要登录凭证，可使用浏览器直接访问资源，然后分析响应头，比如跨域图片、音频等资源。</li><li>需要登录凭证，可使用 postman 发送请求，然后分析响应头。</li></ul><p>日常开发中，特别关注 <code>Access-Control-Allow-Origin</code> 、 <code>Access-Control-Allow-Headers</code> 、 <code>Access-Control-Allow-Methods</code> 、 <code>Access-Control-Allow-Credentials</code> 这几个响应头。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-hidden="true">#</a></h2><p><a href="https://blog.huli.tw/2021/02/19/cors-guide-3/" target="_blank" rel="noreferrer">CORS 完全手册（三）：CORS 详解</a></p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-hidden="true">#</a></h2><p>CORS 是一种跨域解决方案，它是 W3C 标准，主要是通过设置响应头来告知浏览器是否允许跨域请求。<strong>跨域的关键在于服务器，但是作为前端工程师，必需了解跨域可能的问题，能快速定位问题</strong></p><ul><li>简单请求和非简单请求的区别</li><li>预检请求的作用</li><li>如何设置允许跨域的请求头：Access-Control-Allow-Origin 指定允许跨域的域。</li><li>如何设置允许跨域的请求头：Access-Control-Allow-Headers 指定允许跨域的请求头。</li><li>如何设置允许跨域的请求头：Access-Control-Allow-Methods 指定允许跨域的方法。</li><li>如何携带认证信息：设置 fetch 的 credentials 为 include，服务端设置 Access-Control-Allow-Credentials 为 true。</li><li>预检请求的缓存：设置 Access-Control-Max-Age 缓存预检请求的结果。</li><li>如何获取响应头：设置 Access-Control-Expose-Headers 允许前端获取的响应头。</li><li>多个域名跨域：通过判断请求头中的 origin 来设置允许跨域的域。</li><li>no-cors 请求模式：不需要服务器设置跨域响应头，但是不需要服务器端设置响应头 Access-Control-Allow-Origin ，默认是 no-cors 。</li><li>跨域最佳实践：设置 Access-Control-Allow-Origin 为具体的域名，不要使用 *，设置 content-type, 方便使用 json 传输数据。</li></ul><blockquote><p>关于博主，前端程序员，最近专注于 webGis 开发，加微信: MasonChou123，进技术交流群。</p></blockquote>`,130),e=[o];function t(r,c,y,i,D,F){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
