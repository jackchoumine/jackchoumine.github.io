import{_ as s,o as n,c as a,a as l}from"./app.2bf6884c.js";const C=JSON.parse('{"title":"vue 应用测试","description":"","frontmatter":{},"headers":[{"level":2,"title":"前端测试简介","slug":"前端测试简介","link":"#前端测试简介","children":[]},{"level":2,"title":"组件测试","slug":"组件测试","link":"#组件测试","children":[]},{"level":2,"title":"Jest 测试框架简介","slug":"jest-测试框架简介","link":"#jest-测试框架简介","children":[{"level":3,"title":"其他测试框架","slug":"其他测试框架","link":"#其他测试框架","children":[]}]},{"level":2,"title":"第一个测试","slug":"第一个测试","link":"#第一个测试","children":[{"level":3,"title":"避免误报","slug":"避免误报","link":"#避免误报","children":[]},{"level":3,"title":"如何组织测试代码","slug":"如何组织测试代码","link":"#如何组织测试代码","children":[]}]},{"level":2,"title":"组件挂载","slug":"组件挂载","link":"#组件挂载","children":[{"level":3,"title":"Vue2 组件挂载的方式","slug":"vue2-组件挂载的方式","link":"#vue2-组件挂载的方式","children":[]},{"level":3,"title":"Vue3 的挂载方式","slug":"vue3-的挂载方式","link":"#vue3-的挂载方式","children":[]},{"level":3,"title":"vue-test-utils","slug":"vue-test-utils","link":"#vue-test-utils","children":[]},{"level":3,"title":"挂载选项","slug":"挂载选项","link":"#挂载选项","children":[]}]},{"level":2,"title":"如何调试测试用例","slug":"如何调试测试用例","link":"#如何调试测试用例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"relativePath":"vue2/test-vue-intro.md"}'),p={name:"vue2/test-vue-intro.md"},e=l(`<h1 id="vue-应用测试" tabindex="-1">vue 应用测试 <a class="header-anchor" href="#vue-应用测试" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#vue-应用测试">vue 应用测试</a><ul><li><a href="#前端测试简介">前端测试简介</a></li><li><a href="#组件测试">组件测试</a></li><li><a href="#jest-测试框架简介">Jest 测试框架简介</a><ul><li><a href="#其他测试框架">其他测试框架</a></li></ul></li><li><a href="#第一个测试">第一个测试</a><ul><li><a href="#避免误报">避免误报</a></li><li><a href="#如何组织测试代码">如何组织测试代码</a></li></ul></li><li><a href="#组件挂载">组件挂载</a><ul><li><a href="#vue2-组件挂载的方式">Vue2 组件挂载的方式</a></li><li><a href="#vue3-的挂载方式">Vue3 的挂载方式</a></li><li><a href="#vue-test-utils">vue-test-utils</a></li><li><a href="#挂载选项">挂载选项</a></li></ul></li><li><a href="#如何调试测试用例">如何调试测试用例</a></li><li><a href="#参考">参考</a></li><li><a href="#小结">小结</a></li></ul></li></ul></nav><h2 id="前端测试简介" tabindex="-1">前端测试简介 <a class="header-anchor" href="#前端测试简介" aria-hidden="true">#</a></h2><p>软件测试：检查软件是否按照预期工作的过程。</p><p>测试分类：</p><p>从是否需要手动测试来分：</p><ul><li>手动测试：需要人工操作，比如点击按钮，输入文字等。</li><li>自动测试：写代码测试其他代码，不需要人亲自手动测试每一个功能。</li></ul><p>前端测试，从测试的范围来分：</p><ol><li>端到端测试</li></ol><p>测试整个应用，从用户角度出发，<strong>浏览器自动</strong>测试整个应用是否按照预期工作。是自动执行的手动测试，加快手动测试的速度。</p><ul><li>优点：测试全面，测试结果可靠。</li><li>缺点：① 测试速度慢 ② 调试困难 ③ 可能成为 flakey 测试 ④ 编写测试代码的成本高。</li></ul><blockquote><p>flakey 测试：即使程序没有问题，测试也会失败。</p></blockquote><ol start="2"><li>单元测试</li></ol><p>对应用的小部分进行的测试。比如测试一个函数，一个组件等。</p><ul><li>优点：① 测试速度快 ② 调试方便 ③ 编写测试代码的成本低 ④ 提供文档功能，可通过测试用例了解代码的行为 ⑤ 稳定，有助于重构。</li><li>缺点：测试范围小，测试结果不可靠。</li></ul><blockquote><p>重构：不改变代码的功能，但是改变代码的结构，目的是为了提高代码质量。</p></blockquote><ol start="3"><li>快照测试</li></ol><p>快照测试会给运行中的应用程序拍一张图片，并将其与以前保存的图片进行比较。如果图像不同，则测试失败。这种测试方法对确保应用程序代码变更后是否仍然可以正确渲染很有帮助。</p><p>按照是否测试实现来分类：</p><ol><li>白盒测试</li></ol><p>测试代码的实现，比如测试一个函数，需要知道函数的实现细节和依赖关系，然后编写测试代码。往往是开发人员编写的测试代码。</p><p>编写白盒测试，为了隔离复杂的依赖，通常会使用各种模拟手段，来模拟依赖的行为，比如模拟网络请求、用户操作和 pinia 等。</p><blockquote><p>不仅测试做了什么，还要测试怎么做到的。</p></blockquote><blockquote><p>白盒测试用例往往比较脆弱，一旦代码实现发生变化，测试用例很可能就会失败。</p></blockquote><ol start="2"><li>黑盒测试</li></ol><p>不关心代码的实现，只关心代码的输入和输出，比如测试一个函数，只需要知道函数的输入和输出，然后编写测试代码。往往是测试人员编写的测试代码。</p><p>要少用模拟或者恰当的模拟，因为你不知道内部的依赖关系，也难以模拟，二来越多的模拟测试越不可靠。</p><blockquote><p>测试做了什么，而不是测试怎么做的。</p></blockquote><blockquote><p>黑盒测试用例往往比较稳定，一旦代码实现发生变化，测试用例不会失败。</p></blockquote><p>各种测试在前端测试中的占比</p><p><img src="https://jsd.cdn.zzko.cn/gh/jackchoumine/jack-picture@master/front-end-test.png" alt=""></p><blockquote><p>为何没有集成测试？</p></blockquote><p>前端的集成测试，难以定义、编写和调试，通常认为端到端测试就是集成测试。</p><blockquote><p>什么时候不需要自动化测试？</p></blockquote><p>自动化测试的目的是为了节省时间和精力，<strong>长期开发</strong>的<strong>规模较大</strong>的项目自动化测试才会带来巨大的收益。如果项目只是一个小项目，或者是一个短期项目，那么自动化测试可能会带来负担，即编写测试代码会比直接编写应用代码更花时间。</p><p>实际上，在我的工作中，前端进行自动化测试的团队都很少，大部分都是手动测试。</p><blockquote><p>不必追求 100% 的测试覆盖率</p></blockquote><p>除非一个 bug 导致了严重的后果，比如损失几百万元，否则不必追求 100% 的测试覆盖率。因为测试代码也是需要维护的，测试代码的维护成本也是需要考虑的。</p><h2 id="组件测试" tabindex="-1">组件测试 <a class="header-anchor" href="#组件测试" aria-hidden="true">#</a></h2><p>组件有很多属性，决定测试哪些属性很重要，能帮助编写高效的测试代码。</p><blockquote><p>如何决定测试哪些属性？</p></blockquote><p><strong>组件的输入和输出</strong>（有人叫组件契约或者组件接口）可帮助决定测试哪些属性。</p><p>从开发人员使用组件但又不了解组件具体实现的角度来编写测试，好的组件单元测试应该始终可触发一个输入，并断言一个输出。</p><p>常见的组件输入：</p><ol><li>用户操作，比如点击按钮，输入文字等；</li><li>props；</li><li>组件事件；</li><li>vuex store 中的数据；</li><li>inject 注入的数据。</li></ol><p>常见的输出：</p><ol><li>触发的事件；</li><li>外部调用的方法，即公有方法；</li><li>渲染结果。</li></ol><h2 id="jest-测试框架简介" tabindex="-1">Jest 测试框架简介 <a class="header-anchor" href="#jest-测试框架简介" aria-hidden="true">#</a></h2><p>测试文件：以 .spec.js 或者 .test.js 结尾。</p><p>Jest 在查找项目中测试文件时使用默认的 glob 匹配模式。对于 non-glob 模式而言，这意味着 Jest 匹配<strong>tests</strong>目录中的.js 和.jsx 文件，以及扩展名为 .spec.js 或 .test.js 的所有文件。</p><blockquote><p>globs 是文件匹配模式。Jest 使用 Node glob 模块匹配文件。你可以在如下链接页面的 glob primer 部分中阅读到更多关于 globs 的内容，<a href="./www.npmjs.com/package/glob.html#glob-primer">glob-primer</a>。</p></blockquote><h3 id="其他测试框架" tabindex="-1">其他测试框架 <a class="header-anchor" href="#其他测试框架" aria-hidden="true">#</a></h3><p><a href="https://vitest.dev/" target="_blank" rel="noreferrer">vitest</a></p><p><a href="https://peeky.dev/" target="_blank" rel="noreferrer">peeky</a></p><h2 id="第一个测试" tabindex="-1">第一个测试 <a class="header-anchor" href="#第一个测试" aria-hidden="true">#</a></h2><p>已经存在一个使用 <code>vue-cli</code> 创建的项目，希望添加测试。</p><ol><li>安装 vue 测试插件：</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">vue</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@vue/cli-plugin-unit-jest</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>使用 vue-cli 创建的项目，可以使用 <code>vue add</code> 命令安装插件，会自动配置测试环境。</p></blockquote><ol start="2"><li>编写 HelloWorld.vue 组件：</li></ol><p>安装完毕会自动配置测试环境，并创建了一个测试 <code>HelloWorld.vue</code> 的用例，但是项目里没有 HelloWorld.vue，在 <code>tests/unit</code> 就近新建一个。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">HelloWorld</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ msg }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>然后引入组件：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> HelloWorld </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./HelloWorld.vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>运行测试</li></ol><p>执行 <code>npm run test:unit</code> ，测试环境是否配置成功。</p><blockquote><p>可用性（sanity）测试</p></blockquote><p>搭建测试系统的第一步是编写一个简单的测试来检查系统是否配置正确。这被称为<strong>可用性（sanity）测试</strong>。</p><p>在排查复杂问题或者配置环境时，可用性测试应该成为第一个测试用例，因为它能检查环境是否配置正确。</p><blockquote><p>就近放置测试文件</p></blockquote><p>将单元测试放置在尽可能接近被测代码的位置，会更容易被其他开发人员找到。</p><h3 id="避免误报" tabindex="-1">避免误报 <a class="header-anchor" href="#避免误报" aria-hidden="true">#</a></h3><p>测试中，需要避免误报。测试之所以通过，是因为源代码正常工作，而不是因为编写始终能通过的测试。</p><p>常见的误报测试是使用<strong>异步代码</strong>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sets finished to true after 100ms</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">runner</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">expect</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">runner</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">finished</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toBe</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 100ms 后 finished 为 true</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>避免误报的最好方法是使用 TDD。</p></blockquote><p>红色阶段是编写一个<strong>因正确原因</strong>而失败的测试。这里的关键词是“因正确原因”，即确定程序失败的边界条件。</p><p>测试驱动开发（TDD）是一种在编写源代码之前先编写测试代码的工作流程，即在编写组件代码之前，需要先编写能够确保组件正常运行的测试代码。</p><p>“红、绿、重构” 是一种很流行的 TDD 方法。红代表编写一个不能通过的测试，绿代表让测试通过，在测试通过后，通过重构增强代码可读性。</p><p>以这样的方式开发应用程序会有如下好处。首先，你只编写测试功能的源代码，从而保持较少的源代码量；其次，它可以使你在编写代码之前先考虑组件设计。</p><h3 id="如何组织测试代码" tabindex="-1">如何组织测试代码 <a class="header-anchor" href="#如何组织测试代码" aria-hidden="true">#</a></h3><p><code>describe</code> 函数用于组织测试代码，describe 用于定义一组测试用例，每个测试用例都是一个 <code>test</code> 函数。</p><p>describe 函数将多个单元测试用例定义为一个测试套件。当你在命令行运行测试时，Jest 会格式化输出，以便你了解哪些测试套件通过，哪些测试套件失败。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">HelloWorld.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">renders props.msg when passed</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">new message</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">wrapper</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">shallowMount</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">HelloWorld</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      propsData</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">msg</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">expect</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">wrapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">text</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toMatch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>当运行测试时，会在控制台<strong>格式化输出</strong> describe 和 test 的一个参数，方便查看测试结果。</p><p>一个文件可写多个 describe，describe 可嵌套，</p><blockquote><p>推荐的做法是一个文件只写一个 describe。</p></blockquote><p>否则会降低测试代码的可读性和新加的测试用例的不知道放在哪个 describe 里面。</p><blockquote><p>测试代码和源代码挨近，方便他人查看。</p></blockquote><blockquote><p>不要嵌套使用 describe，会让测试代码难以理解。</p></blockquote><p><code>test</code> 表示一个测试用例。</p><p>两个参数：</p><p>第一个参数是一个 <code>字符串</code> ，在同一个测试套件中，需要唯一，用于标识测试报告中的测试，用来对你的测试做讲要的说明，方便你的阅读测试报告。</p><p>第二个参数是包含测试代码的函数。</p><blockquote><p><code>it</code> 是它的别名 <code>xit</code> 表示跳过这个测试用例，在跳过某些正在或者不想要测试的用例时特别有用。</p></blockquote><blockquote><p><code>test.only</code> 表示只运行这个测试用例，其他测试用例都会被跳过。</p></blockquote><blockquote><p>三步法(3A法则)写测试用例</p></blockquote><ol><li>准备测试环境(数据、模拟的函数、模拟模块、挂载组件等，是测试的必要条件)(Arrange)，让测试就绪，这里是渲染组件。</li><li>采取行动(Action)，执行某些操作，比如用户输入、查找渲染结果等，这里是获取组件的文本内容。</li><li>断言(Assert)，判断上述行动是否符合预期，这里是断言组件的文本内容和测试数据是否一致，。</li></ol><p>以上三步的代码使用空行分隔，这样可以让测试代码更加清晰可读。</p><blockquote><p>编程的经验法则之一：代码排版反映思路。</p></blockquote><p>代码越是美观合理，说明写下这段代码的时候，思路越是清晰，这样的代码也更容易被其他人理解，反之亦然。</p><h2 id="组件挂载" tabindex="-1">组件挂载 <a class="header-anchor" href="#组件挂载" aria-hidden="true">#</a></h2><p>Vue 组件想要渲染到页面上，需要一个<strong>挂载</strong>的动作，或者说触发组件渲染到页面上的动作叫挂载。</p><h3 id="vue2-组件挂载的方式" tabindex="-1">Vue2 组件挂载的方式 <a class="header-anchor" href="#vue2-组件挂载的方式" aria-hidden="true">#</a></h3><ol><li><p>在组件选项中指定 el。</p></li><li><p>使用 Vue 构造器动态挂载。</p></li></ol><p><code>new Vue(componentOptions).$mount(el)</code></p><p><code>new Vue.extend(componentOptions).$mount(el)</code></p><p>Vue.extend 接收一个组件选项，然后返回一个构造器。</p><blockquote><p>使用 Vue.extend 手动挂载组件，也是 vue2 中实现弹窗的方式，即新建一个和 body 同级的 div，然后把组件挂载到这个 div，从而让组件的渲染结果脱离组件的嵌套关系。</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> App </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">count</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Number</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      msg</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      innerCount</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">methods</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">add</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">innerCount</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/*html*/</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;div v-if=&quot;count % 2 === 0&quot;&gt;count:{{count}}. count is even.&lt;/div&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;div v-else&gt;count:{{count}}. count is odd.&lt;/div&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;button @click=&quot;add&quot;&gt;{{innerCount}}&lt;/button&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  </span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">describe</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">App</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">it</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">挂载App</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Ctor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">extend</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">App</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Ctor</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="vue3-的挂载方式" tabindex="-1">Vue3 的挂载方式 <a class="header-anchor" href="#vue3-的挂载方式" aria-hidden="true">#</a></h3><ol><li>createApp</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createApp</span><span style="color:#A6ACCD;">(App)</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>使用 createApp 挂载一个弹窗。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">modal-container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    我是弹窗组件</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">button</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">close</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">点击我关闭</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ref</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">onMounted</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">reactive</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">watch</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">computed</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">defineComponent</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineComponent</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Modal</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">components</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">setup</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">props</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#A6ACCD;font-style:italic;">emit</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#A6ACCD;font-style:italic;">attrs</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#A6ACCD;font-style:italic;">slots</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">onMounted</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">onMounted</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">modal</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.modal</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeChild</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">modal</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">close</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">modal</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> fixed</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">400px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">z-index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ccc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">modal-container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><p>在某个组件内执行 mountModal 挂载显示弹窗。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">mountModal</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">div</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">className</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">modal</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">div</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">modal</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createApp</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Modal</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">modal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mount</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">div</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><a href="https://forum.vuejs.org/t/vue-extend-equivalent-in-vue-3/123148" target="_blank" rel="noreferrer">参考问题</a></p><ol start="2"><li>瞬移组件 Teleport</li></ol><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Teleport</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">modal-container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">通过to属性指定挂载的DOM</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Teleport</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>jest 在 jsdom 环境中运行，jsdom 是一个模拟浏览器环境的库，它提供了一些浏览器环境的全局变量，比如 window、document 等。 所以能直接挂载组件。</p></blockquote><h3 id="vue-test-utils" tabindex="-1">vue-test-utils <a class="header-anchor" href="#vue-test-utils" aria-hidden="true">#</a></h3><p>手动挂载组件，代码量较多，<a href="https://v1.test-utils.vuejs.org/zh/" target="_blank" rel="noreferrer">vue-test-utils</a> 提供了一些方便的 API 帮我们做这些事情。</p><p>mount 方法，该方法在接收一个组件后，会将其挂载并返回一个包含被挂载组件实例（vm）的<strong>包装器对象</strong>。</p><blockquote><p>知道为什么 mount 不直返回 Vue 实例（vm）而是返回包装器?</p></blockquote><p>mount 返回的包装器不仅包含 Vue 实例，还包括一些辅助方法，你可以使用它们来<strong>设置 props</strong>，<strong>检查实例属性</strong>以及<strong>操作实例</strong>。</p><p>常用的包装器方法：</p><ol><li>text 方法：返回包装器的文本内容。</li><li>html 方法：返回包装器的 HTML 内容。</li><li>find 方法：返回包含指定选择器的第一个 DOM 元素的包装器。</li><li>exists 方法：返回一个布尔值，指示包装器是否包含一个或多个匹配的元素。</li><li>findAll 方法：返回包含指定选择器的所有 DOM 元素的包装器。</li><li>setData 方法：设置组件的 data 属性。</li><li>setProps 方法：设置组件的 props 属性。</li><li>trigger 方法：触发指定的事件。</li><li>vm 属性：返回包装器的 Vue 实例。</li></ol><blockquote><p>mount vs shallowMount</p></blockquote><p>另一个挂载方法， <code>shallowMount</code> ，该方法与 mount 方法类似，但是它不会渲染组件的子组件，而是使用 <code>vuecomponent-stub</code> 代替。</p><p>它隔离了组件与其子组件的关系，排除了复杂的依赖关系，使得测试更加专注于当前组件。</p><p>mount 会渲染子组件，更加贴近真实环境，但是会增加测试的复杂度。</p><blockquote><p>一种不渲染子组件的方 --- stubs 模拟子组件。</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">mount</span><span style="color:#A6ACCD;">(ParentCom</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stubs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Child</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">    Child2: </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;span&gt;我是子组件&lt;/span&gt;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>使用 stubs 对象模拟子组件，可以使用布尔值或者字符串模拟子组件。</p><p>这些子组件不会真的渲染，但是它们会存在你的包装器中，你可以使用 find 方法找到它们。</p><h3 id="挂载选项" tabindex="-1">挂载选项 <a class="header-anchor" href="#挂载选项" aria-hidden="true">#</a></h3><p>挂载时可以传递一些组件选项，比如 propsData、data、mocks 等，这些选项会覆盖组件的默认选项。</p><p><a href="https://v1.test-utils.vuejs.org/api/options.html#mounting-options" target="_blank" rel="noreferrer">Mounting Options</a></p><h2 id="如何调试测试用例" tabindex="-1">如何调试测试用例 <a class="header-anchor" href="#如何调试测试用例" aria-hidden="true">#</a></h2><ol><li>使用 vscode 扩展</li></ol><p><code>Jest Runner</code> 可以在 vscode 中运行测试用例，方便调试。</p><blockquote><p>推荐使用</p></blockquote><ol start="2"><li>在 chrome 浏览器调试</li></ol><p>开启 jest 调试模式，新加一个脚本：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">&quot;test:debug&quot;</span><span style="color:#82AAFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node --inspect-brk node_modules/.bin/vue-cli-service test:unit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>没成功，你可以试试。</p><ol start="3"><li>在 vscode 中调试</li></ol><p>配置没成功，你可以试试。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><p><a href="https://cn.vuejs.org/guide/scaling-up/testing.html" target="_blank" rel="noreferrer">vue 官方对测试的建议</a></p><p><a href="https://www.aligoogle.net/pages/343eae/#%E4%B8%80-%E4%BE%9D%E8%B5%96%E8%AF%B4%E6%98%8E" target="_blank" rel="noreferrer">Jest 单元测试环境搭建</a></p><p><a href="https://blog.octo.com/vue-js-unit-test-cases-with-vue-test-utils-and-jest/" target="_blank" rel="noreferrer">Vue.js unit test cases with vue-test-utils and Jest</a></p><p><a href="https://mayashavin.com/articles/testing-components-with-vitest" target="_blank" rel="noreferrer"></a></p><p><a href="https://blog.logrocket.com/guide-vitest-automated-testing-vue-components/" target="_blank" rel="noreferrer"></a></p><p><a href="https://vueschool.io/lessons/learn-how-to-test-vuejs-lifecycle-methods" target="_blank" rel="noreferrer"></a></p><p><a href="https://blog.canopas.com/vue-3-component-testing-with-jest-8b80a8a8946b" target="_blank" rel="noreferrer"></a></p><p><a href="https://testdriven.io/blog/vue-unit-testing/" target="_blank" rel="noreferrer">Guide to Unit Testing Vue Components</a></p><p><a href="https://fjolt.com/category/vue" target="_blank" rel="noreferrer">All Vue Content</a></p><p><a href="https://www.youtube.com/watch?v=OIpfWTThrK8" target="_blank" rel="noreferrer">Vue NYC - Component Tests with Vue.js - Matt O&#39;Connell---技术演讲</a></p><p><a href="https://gabrieltanner.org/blog/testing-introduction/" target="_blank" rel="noreferrer">An Introduction to testing in Javascript</a></p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-hidden="true">#</a></h2><ul><li>介绍了前端测试的分类，单元测试能帮助我们编写高质量的代码。</li><li>组件测试的要点：给组件输入，测试输出。</li><li>Jest 测试框架简介。</li><li>3A法则写测试用例。</li><li>vue 组件渲染的三种方式：shallowMount、mount、Teleport.to 和手动挂载。</li><li>不渲染子组件的几种方式：stubs 配置、shallowMount。</li><li>调试测试用例的三种方式：vscode 插件、chrome、vscode。</li></ul>`,163),o=[e];function t(r,c,i,F,y,D){return n(),a("div",null,o)}const b=s(p,[["render",t]]);export{C as __pageData,b as default};
