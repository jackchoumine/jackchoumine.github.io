import{_ as s,o as n,c as a,a as l}from"./app.624179c4.js";const C=JSON.parse('{"title":"一些杂问题","description":"","frontmatter":{},"headers":[{"level":2,"title":"npm init vue@latest 与 npm create vite@latest 的区别?","slug":"npm-init-vue-latest-与-npm-create-vite-latest-的区别","link":"#npm-init-vue-latest-与-npm-create-vite-latest-的区别","children":[]},{"level":2,"title":"展开运算符 ... 作用于基本类型，不报错","slug":"展开运算符-作用于基本类型-不报错","link":"#展开运算符-作用于基本类型-不报错","children":[]}],"relativePath":"vue3/一些杂问题.md"}'),e={name:"vue3/一些杂问题.md"},p=l(`<h1 id="一些杂问题" tabindex="-1">一些杂问题 <a class="header-anchor" href="#一些杂问题" aria-hidden="true">#</a></h1><h2 id="npm-init-vue-latest-与-npm-create-vite-latest-的区别" tabindex="-1">npm init vue@latest 与 npm create vite@latest 的区别? <a class="header-anchor" href="#npm-init-vue-latest-与-npm-create-vite-latest-的区别" aria-hidden="true">#</a></h2><p><code>npm init vue@latest</code> 创建一个 vue3 项目，会让你选择项目配置，比如是否使用 typescript，是否使用 eslint 等。</p><blockquote><p>@latest 不能省略，否则 npm 使用老的版本。</p></blockquote><p><code>npm create vite@latest</code> 创建一个 vite 项目，会让你选择你想要的框架，比如 vue，react，svelte 等。</p><blockquote><p>@latest 似乎可以省略，没查到文档，但是不加也没问题。</p></blockquote><blockquote><p>相同点，都使用 vite 来构建项目。</p></blockquote><blockquote><p>如何创建一个 vue2 的的项目？</p></blockquote><p><code>npm init vue@legacy</code> 。</p><p>参考文章</p><p><a href="https://lxchuan12.gitee.io/create-vue/" target="_blank" rel="noreferrer">create-vue，未来将替代 Vue-CLI</a></p><h2 id="展开运算符-作用于基本类型-不报错" tabindex="-1">展开运算符 <code>...</code> 作用于基本类型，不报错 <a class="header-anchor" href="#展开运算符-作用于基本类型-不报错" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...{},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// {}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...{},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// {}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...{},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// {&#39;1&#39;:1,&#39;2&#39;:2}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...{},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// {&#39;0&#39;:1,&#39;1&#39;:&#39;t&#39;,&#39;2&#39;:&#39;r&#39;}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...{},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...undefined</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// {}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...{},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...null</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// {}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><blockquote><p><code>...</code> 一般用于对象、数组和字符串展开，用于基本类型和 null 不会报错，但是也不会有什么作用。也就是说可用于任何类型，这个特点能简化代码。</p></blockquote>`,14),o=[p];function t(c,r,i,D,y,F){return n(),a("div",null,o)}const u=s(e,[["render",t]]);export{C as __pageData,u as default};
