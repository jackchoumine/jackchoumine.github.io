import{_ as s,o as a,c as e,a as n}from"./app.7c3fd0e1.js";const m=JSON.parse('{"title":"ol 学习笔记(二)--地图初始化","description":"","frontmatter":{},"headers":[{"level":2,"title":"view","slug":"view","link":"#view","children":[{"level":3,"title":"放大和缩小","slug":"放大和缩小","link":"#放大和缩小","children":[]}]}],"relativePath":"web-gis/ol-1-map-init.md"}'),t={name:"web-gis/ol-1-map-init.md"},o=n(`<h1 id="ol-学习笔记-二-地图初始化" tabindex="-1">ol 学习笔记(二)--地图初始化 <a class="header-anchor" href="#ol-学习笔记-二-地图初始化" aria-hidden="true">#</a></h1><p><img src="https://lzugis15.gitee.io/lzugis-blogs/img/frame/ol-core.png" alt="ol map 类组成"></p><p>图片来源： <code>https://lzugis15.gitee.io/lzugis-blogs/</code></p><p>ol 的核心类组成</p><table><thead><tr><th>类</th><th>描述</th></tr></thead><tbody><tr><td>Map</td><td>ol 入口，调用其他类，初始化地图。</td></tr><tr><td>View</td><td>地图视图，控制地图的中心、范围和层级等。</td></tr><tr><td>Layer</td><td>地图图层，ol 支持各种各样的图层。多个图层叠加在一起。</td></tr><tr><td>Source</td><td>数据源，和图层一一对应，ol 支持多种数据源。</td></tr><tr><td>Control</td><td>地图控件，提供了和地图交互的功能。控件具备相同的一个特性，就是一直保持在地图的某个固定位置，不会随着地图移动而移动，也不会随着地图放大缩小而变化，一直处于地图的最上层。</td></tr><tr><td>Interaction</td><td>另一种和地图交互的方式。</td></tr></tbody></table><p>几乎所有的类都围绕这些类展开，还有一些其他类，后面的学习中继续介绍。</p><h2 id="view" tabindex="-1">view <a class="header-anchor" href="#view" aria-hidden="true">#</a></h2><p>view 就是一个可看见的地图窗口，通过view，可和地图进行交互，比如放大、缩小等。</p><h3 id="放大和缩小" tabindex="-1">放大和缩小 <a class="header-anchor" href="#放大和缩小" aria-hidden="true">#</a></h3><p><code>view.setZoom</code> ，传递一个 <code>zoom</code> ，表示放缩到多少级别。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">zoom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">step</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">zoom</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getZoom</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setZoom</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">zoom</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">step</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,11),l=[o];function p(r,c,i,d,y,h){return a(),e("div",null,l)}const A=s(t,[["render",p]]);export{m as __pageData,A as default};
