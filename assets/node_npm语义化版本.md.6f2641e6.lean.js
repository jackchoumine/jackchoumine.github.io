import{_ as s,o as n,c as a,a as l}from"./app.5ee2aeb6.js";const h=JSON.parse('{"title":"npm 语义化版本","description":"","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"版本号变更规则","slug":"版本号变更规则","link":"#版本号变更规则","children":[]},{"level":2,"title":"如何处理即将弃用的功能？","slug":"如何处理即将弃用的功能","link":"#如何处理即将弃用的功能","children":[]},{"level":2,"title":"git 和 npm version 结合","slug":"git-和-npm-version-结合","link":"#git-和-npm-version-结合","children":[{"level":3,"title":"手动更改版本号","slug":"手动更改版本号","link":"#手动更改版本号","children":[]},{"level":3,"title":"自动更新版本","slug":"自动更新版本","link":"#自动更新版本","children":[]}]},{"level":2,"title":"希望发布一个带有测试功能的版本，如何设置版本号？","slug":"希望发布一个带有测试功能的版本-如何设置版本号","link":"#希望发布一个带有测试功能的版本-如何设置版本号","children":[]},{"level":2,"title":"版本运算符","slug":"版本运算符","link":"#版本运算符","children":[{"level":3,"title":"~ 版本号 ----- 指定主版本号或者次版本号相同","slug":"版本号-指定主版本号或者次版本号相同","link":"#版本号-指定主版本号或者次版本号相同","children":[]},{"level":3,"title":"^ 版本号 --- 第一个非零 版本号相同","slug":"版本号-第一个非零-版本号相同","link":"#版本号-第一个非零-版本号相同","children":[]},{"level":3,"title":"~ vs ^","slug":"vs","link":"#vs","children":[]},{"level":3,"title":"如何优雅地按照版本范围升级依赖","slug":"如何优雅地按照版本范围升级依赖","link":"#如何优雅地按照版本范围升级依赖","children":[]},{"level":3,"title":"- 指定精确范围","slug":"指定精确范围","link":"#指定精确范围","children":[]},{"level":3,"title":"版本号比较器","slug":"版本号比较器","link":"#版本号比较器","children":[]},{"level":3,"title":"分组 || (几乎不用)","slug":"分组-几乎不用","link":"#分组-几乎不用","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"node/npm语义化版本.md"}'),e={name:"node/npm语义化版本.md"},t=l("",87),p=[t];function o(r,c,i,d,y,C){return n(),a("div",null,p)}const A=s(e,[["render",o]]);export{h as __pageData,A as default};
